{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","filterInputValue","onChange","filterInputChangeFn","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","baseUrl","axios","get","newObject","post","id","put","delete","Persons","name","map","person","key","number","onClick","onDeleteClick","Notification","message","includes","className","App","hook","console","log","personService","then","response","setPersons","data","useEffect","useState","persons","setNewName","setNewNumber","nameToCompare","setNameToCompare","setMessage","namesToShow","filter","toUpperCase","event","target","preventDefault","exists","some","personObject","concat","setTimeout","window","confirm","find","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90ae5fed.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter with <input value={props.filterInputValue} onChange={props.filterInputChangeFn} />\r\n        </div>\r\n    )\r\n}\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll =  () => {\r\n    return axios.get(baseUrl)\r\n \r\n}\r\n\r\nconst create =  newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n  \r\n}\r\nconst remove =(id) => {\r\n    return( axios.delete(`${baseUrl}/${id}`) \r\n    )\r\n}\r\n\r\nconst update = (id,newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default {getAll,create,update,remove}","  \r\nimport React from 'react';\r\nconst Persons = (props) => {\r\n    return (\r\n    \r\n        <div>\r\n                    { props.name.map( person =>\r\n                        <li key={ person.id }>\r\n                            { person.name } { person.number } <button onClick={ ()=> { props.onDeleteClick( person.id )} }>Delete</button>\r\n                        </li> \r\n                    ) }\r\n                    </div>\r\n             \r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n  \r\n    if(message.includes('already')){\r\n    return(\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n            )\r\n    }else{\r\n        return(\r\n            <div className=\"message\">\r\n            {message}\r\n        </div>\r\n        )\r\n    }\r\n  \r\n            \r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\n\r\n\r\nconst App = (props) => {\r\n\r\n    const hook = () => {\r\n        console.log('effect')\r\n        personService.\r\n      getAll()\r\n            .then(response => {\r\n                console.log('promise fulfilled')\r\n                setPersons(response.data)\r\n            })\r\n    \r\n    }\r\n    useEffect(hook, [])\r\n    \r\n    const [persons, setPersons] = useState([\r\n        {\r\n            name: 'Arto Hellas',\r\n            number: '045-050192',\r\n        }\r\n    ])\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [nameToCompare, setNameToCompare] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const handleFilterInputChange = (event) => {\r\n        setNameToCompare(event.target.value)\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const exists = persons.some(person => (person.name === newName));\r\n        const personObject = { \r\n            name: newName,\r\n            number: newNumber,\r\n            id: newName\r\n        }\r\n       \r\n        if (exists === false) { \r\n            setPersons(persons.concat(personObject))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMessage(\r\n                `${newName} successfully added to phonebook!`)\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            }, 5000)\r\n        }\r\n        else if (exists === true) {\r\n           if( window.confirm(`${newName} is already in the phonebook, replace number with a new one?`)){\r\n               let id = newName;\r\n            personService\r\n            .update(id,personObject)\r\n            .then(hook)\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMessage(`${newName}'s number successfully updated to phonebook!`)\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            }, 5000)\r\n        }\r\n        }\r\n        \r\n\r\n        personService\r\n        .create(personObject)\r\n        .then(response => {\r\n            setPersons(persons.concat(response.data))\r\n        })\r\n      \r\n    \r\n    }\r\n    const deletePerson= id => {\r\n        let name =persons.find( person => person.id === id ).name\r\n\r\n        if( window.confirm( `Delete person \"${ name }\" ?` ) ) {\r\n        personService\r\n        .remove(id)\r\n        .then(hook)\r\n        .catch(error => {\r\n            error = `${name} already deleted from server, try to refresh`\r\n            setMessage(error)\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n            }, 5000)\r\n        })\r\n        setMessage(`${name} successfully deleted from phonebook! `)\r\n        setTimeout(() => {\r\n            setMessage(null)\r\n        }, 5000)\r\n        }\r\n       \r\n}\r\n   \r\n    const namesToShow = nameToCompare ? persons.filter(person => person.name.toUpperCase().includes(nameToCompare.toUpperCase()) === true) : persons;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={message}></Notification>\r\n            <Filter filterInputValue={nameToCompare} filterInputChangeFn={handleFilterInputChange} />\r\n            <h1>Add a new</h1>\r\n            <div>\r\n                <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n            </div>\r\n            <h1>Names  -  Numbers</h1>\r\n            <div>\r\n                {console.log(namesToShow)}\r\n          <Persons name = {namesToShow} onDeleteClick={deletePerson}></Persons>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}